<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/TigerSan.UI;component/Styles/Global.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!--  普通按钮：  -->
    <Style TargetType="{x:Type Button}">
        <Setter Property="Width" Value="Auto" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Padding" Value="{DynamicResource Button.Padding}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Foreground" Value="{DynamicResource Colors.BasicWhite}" />
        <Setter Property="Background" Value="{DynamicResource Colors.Brand}" />
        <Setter Property="FontSize" Value="{DynamicResource Global.Content.FontSize}" />
        <Setter Property="FontFamily" Value="{DynamicResource Global.FontFamily}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="back"
                            Background="{TemplateBinding Background}"
                            CornerRadius="{StaticResource Button.CornerRadius}">
                        <Border
                            Name="backMask"
                            Padding="{TemplateBinding Padding}"
                            CornerRadius="{StaticResource Button.CornerRadius}"
                            Background="Transparent">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                    </Border>
                    <!-- 触发器: -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="backMask" Property="Background" Value="{DynamicResource Colors.Mask.Hover}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="backMask" Property="Background" Value="{DynamicResource Colors.Mask.Pressed}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  屏保按钮：  -->
    <Style x:Key="ScreenSaverButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="MinWidth" Value="30" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="Padding" Value="{DynamicResource Button.Padding}" />
        <Setter Property="FontSize" Value="{DynamicResource Global.Content.FontSize}" />
        <Setter Property="FontFamily" Value="{DynamicResource Global.FontFamily}" />
        <Setter Property="Foreground" Value="{DynamicResource Colors.BasicWhite}" />
        <Setter Property="Background" Value="{DynamicResource Colors.BasicWhite}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border
                            Background="{TemplateBinding Background}"
                            CornerRadius="30"
                            Opacity="0.25" />
                        <Border
                            Name="back"
                            CornerRadius="30"
                            Background="Transparent" />
                        <ContentPresenter
                            Margin="{TemplateBinding Padding}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Opacity="0.25" />
                    </Grid>
                    <!-- 触发器: -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="back" Property="Background" Value="{DynamicResource Colors.Mask.Hover}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="back" Property="Background" Value="{DynamicResource Colors.Mask.Pressed}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  文件选择器按钮：  -->
    <Style x:Key="FileSelectorButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Content" Value="选择文件" />
        <Setter Property="Padding" Value="{StaticResource Button.Padding}" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="AllowDrop" Value="True" />
        <Setter Property="Foreground" Value="{StaticResource Colors.Brand}" />
        <Setter Property="BorderBrush" Value="{StaticResource Colors.Brand}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="FontSize" Value="{DynamicResource Global.Content.FontSize}" />
        <Setter Property="FontFamily" Value="{DynamicResource Global.FontFamily}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                        Background="{TemplateBinding Background}">
                        <Border.BorderBrush>
                            <VisualBrush>
                                <VisualBrush.Visual>
                                    <Rectangle
                                        Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualWidth}"
                                        Height="{Binding RelativeSource={RelativeSource AncestorType={x:Type Border}}, Path=ActualHeight}"
                                        Stroke="{TemplateBinding BorderBrush}"
                                        StrokeDashArray="4 2" />
                                </VisualBrush.Visual>
                            </VisualBrush>
                        </Border.BorderBrush>
                        <Border x:Name="backMask" Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                    </Border>
                    <!-- 触发器: -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource Colors.BasicWhite}" />
                            <Setter Property="Background" Value="{StaticResource Colors.Brand}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="backMask" Property="Background" Value="{StaticResource Colors.Mask.Pressed}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- 标签按钮： -->
    <Style x:Key="LableButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Padding" Value="{DynamicResource Button.Padding}" />
        <Setter Property="FontSize" Value="{DynamicResource Global.Content.FontSize}" />
        <Setter Property="FontFamily" Value="{DynamicResource Global.FontFamily}" />
        <Setter Property="Foreground" Value="{DynamicResource Colors.BasicWhite}" />
        <Setter Property="Background" Value="{DynamicResource Colors.BasicWhite}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Label
                        VerticalContentAlignment="Center"
                        HorizontalContentAlignment="Center"
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}"
                        Content="{TemplateBinding Content}"
                        FontSize="{TemplateBinding FontSize}"
                        FontFamily="{TemplateBinding FontFamily}"
                        Foreground="{TemplateBinding Foreground}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!-- 触发器： -->
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Foreground" Value="{DynamicResource Colors.Brand}" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>